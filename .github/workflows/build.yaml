name: Build

on:
  - push
  - pull_request

permissions:
  contents: write

jobs:
  build_plugin:
    name: Build Plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: pnpm

      - name: Install package and build
        run: |
          pnpm install --no-frozen-lockfile
          pnpm build

      - name: Collect files
        run: |
          mkdir -p release/DeckyClash
          cp -R defaults/* dist py_modules release/DeckyClash/
          rm -rf release/DeckyClash/defaults/external/.git
          cp main.py plugin.json package.json LICENSE release/DeckyClash/
          cd release 
          zip -r DeckyClash.zip DeckyClash
          cd ..

      - name: Packing offine installer
        run: |
          mkdir -p release/homebrew/plugins
          cp -R release/DeckyClash release/homebrew/plugins/
          OVERRIDE_BASE_DIR="release/homebrew" ./install.sh --yes --no-privilege --without-plugin --without-restart
          cp install-offline.sh release/Installer-DeckyClash.sh
          cd release
          zip -r DeckyClash-full.zip homebrew
          cat DeckyClash-full.zip >> Installer-DeckyClash.sh
          cd ..

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deckyclash-artifacts
          path: |
            ./release/DeckyClash.zip
            ./release/DeckyClash-full.zip
            ./release/Installer-DeckyClash.sh
          if-no-files-found: error

  publish:
    name: Publish release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build_plugin
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Publish to Github release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/deckyclash-artifacts/DeckyClash.zip
          name: Release ${{ github.ref_name }}
          draft: false
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, 'pre') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nightly:
    name: Publish nightly
    if: ${{ github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    needs: build_plugin
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Publish to Github release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/deckyclash-artifacts/*.zip
          name: Release Nightly
          draft: false
          generate_release_notes: true
          prerelease: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
